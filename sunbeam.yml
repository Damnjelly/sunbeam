---
# yaml-language-server: $schema=./schemas/schema.json
name: github
version: "1.0"
title: GitHub
entrypoints:
  - title: List My Repositories
    type: run-script
    script: list-repositories
    with:
      owner: pomdtr
  - title: List Repositories
    type: run-script
    script: list-repositories
  - title: List Dailymotion Repositories
    type: run-script
    script: list-repositories
    with:
      owner: dailymotion
  - title: List Airflow Pull Requests
    type: run-script
    script: list-pull-requests
    with:
      repository: dailymotion/dwh-dags
scripts:
  list-repositories:
    title: List Repositories
    command: ./examples/github/list-repos.sh ${{ input "owner" }}
    output:
      type: list
      mode: filter
      showPreview: true
    inputs:
      - name: owner
        title: Owner
        type: textfield
        required: false
  list-pull-requests:
    title: List Pull Requests
    command: examples/github/list-prs.sh ${{ input "repository" }}
    output:
      type: list
      mode: filter
    inputs:
      - name: repository
        title: Repository
        type: textfield
---
# yaml-language-server: $schema=./schemas/schema.json
name: file-browser
version: "1.0"
title: File Browser
entrypoints:
  - title: Browse Custom Directory
    type: run-script
    script: file-browser
  - title: Browse Root Directory
    type: run-script
    script: file-browser
    with:
      root: "/"
  - title: Browse Current Directory
    type: run-script
    script: file-browser
    with:
      root: "."
scripts:
  file-browser:
    title: File Browser
    command: ./examples/file-browser.py --root ${{ input "root" }}
    output:
      type: "list"
      mode: filter
    inputs:
      - name: root
        title: Root
        type: textfield
        placeholder: Select a directory
---
# yaml-language-server: $schema=./schemas/schema.json
name: bitwarden
version: "1.0"
title: Bitwarden
entrypoints:
  - title: Search Passwords
    type: run-script
    script: list-passwords
scripts:
  list-passwords:
    title: Search Passwords
    # Please do not do this, you are better of moving the logic to an external file
    command: ./examples/bitwarden.sh
    output:
      type: list
      mode: filter
---
# yaml-language-server: $schema=./schemas/schema.json
name: jira
version: "1.0"
title: Jira
entrypoints:
  - type: run-script
    title: List Issues
    script: list-issues
    with:
      jql: assignee=currentUser() and status!=Closed
scripts:
  list-issues:
    title: List Issues
    command: ./examples/jira.sh ${{ input "jql" }}
    output:
      type: list
      mode: filter
    inputs:
      - name: jql
        title: JQL
        type: textfield
---
# yaml-language-server: $schema=./schemas/schema.json
name: google
title: Google
version: "1.0"
entrypoints:
  - type: run-script
    title: Google Suggestions
    script: google-suggestions
scripts:
  google-suggestions:
    command: ./examples/google.mjs --query ${{ query }}
    output:
      type: list
      mode: generator
---
# yaml-language-server: $schema=./schemas/schema.json
name: random
title: Random
version: "1.0"
entrypoints:
  - type: run-script
    title: "Generate 5 random numbers"
    script: "random-list"
  - type: run-script
    title: "Random Number"
    script: "random-number"
scripts:
  random-list:
    command: ./examples/random_list.py
    output:
      type: list
      mode: filter
---
# yaml-language-server: $schema=./schemas/schema.json
name: Sunbeam
title: Sunbeam
version: "1.0"
entrypoints:
  - type: run-script
    title: "Search Extensions"
    script: search-extensions
scripts:
  search-extensions:
    command: |
      gh api '/search/repositories?q=topic:sunbeam-extension' \
        --jq '.items[] | {
            title: .full_name,
            subtitle: .description,
            actions: [
              { type: "open-url", title: "Open in Browser", url: .html_url },
              { type: "exec-command", title: "Install Extension", command: "sunbeam extension install \(.html_url)" }
            ],
            accessories: [
              .owner.login
            ]
        }'
    output:
      type: list
      mode: filter
---
# yaml-language-server: $schema=./schemas/schema.json
name: tldr
title: TLDR
version: "1.0"
entrypoints:
  - type: run-script
    title: "Search MacOS Pages"
    script: search-pages
    with:
      platform: macos
  - type: run-script
    title: "Search Linux Pages"
    script: search-pages
    with:
      platform: linux
scripts:
  search-pages:
    title: Search TLDR Pages
    command: |
      tldr --list --platform ${{ input "platform" }} | sunbeam jq -R '{
        id: .,
        title: .,
        previewCmd: "tldr --platform ${{ input "platform" }} \(.) --raw",
        actions: [
          { type: "exit" }
        ]
      }'
    output:
      type: list
      mode: filter
      showPreview: true
    inputs:
      - name: platform
        type: textfield
        title: Platform
